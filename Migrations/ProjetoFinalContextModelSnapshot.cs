// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoFinal;

#nullable disable

namespace ProjetoFinal.Migrations
{
    [DbContext(typeof(ProjetoFinalContext))]
    partial class ProjetoFinalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoFinal.Cargo", b =>
                {
                    b.Property<int>("codCargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codCargo"));

                    b.Property<string>("nomeCargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("salarioBase")
                        .HasColumnType("real");

                    b.HasKey("codCargo");

                    b.ToTable("cargos");
                });

            modelBuilder.Entity("ProjetoFinal.Cliente", b =>
                {
                    b.Property<int>("codCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codCliente"));

                    b.Property<string>("PessFCPFCliente")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PessJCNPJCliente")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("descricaoCliente")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("emailCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("enderecoCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nomeCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("statusCliente")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("telefoneCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("codCliente");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("ProjetoFinal.ContaBancaria", b =>
                {
                    b.Property<int>("codContaB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codContaB"));

                    b.Property<string>("agenciaContaB")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("codFuncionario")
                        .HasColumnType("int");

                    b.Property<int?>("fkCodFuncionariocodFuncionario")
                        .HasColumnType("int");

                    b.Property<string>("numeroContaB")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("tipoContaB")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("codContaB");

                    b.HasIndex("fkCodFuncionariocodFuncionario");

                    b.ToTable("contasBancarias");
                });

            modelBuilder.Entity("ProjetoFinal.Departamento", b =>
                {
                    b.Property<int>("codDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codDepartamento"));

                    b.Property<string>("nomeDepartamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("responsavelDepartamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("codDepartamento");

                    b.ToTable("departamentos");
                });

            modelBuilder.Entity("ProjetoFinal.Funcionario", b =>
                {
                    b.Property<int>("codFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codFuncionario"));

                    b.Property<string>("CPFFuncionario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("emailFuncionario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("enderecoFuncionario")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("formacaoRelevanteFuncionario")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("idCargo")
                        .HasColumnType("int");

                    b.Property<int?>("idDepartamento")
                        .HasColumnType("int");

                    b.Property<string>("modoTrabFuncionario")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nomeFuncionario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("statusFuncionario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("telefoneFuncionario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("tipoContrFuncionario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("codFuncionario");

                    b.HasIndex("idCargo");

                    b.HasIndex("idDepartamento");

                    b.ToTable("funcionarios");
                });

            modelBuilder.Entity("ProjetoFinal.Projeto", b =>
                {
                    b.Property<int>("codProjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codProjeto"));

                    b.Property<int>("codDepartamento")
                        .HasColumnType("int");

                    b.Property<DateOnly>("dataEntregaProjeto")
                        .HasColumnType("date");

                    b.Property<string>("descricaoProjeto")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("idCliente")
                        .HasColumnType("int");

                    b.Property<string>("nomeProjeto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("statusProjeto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("valorProjeto")
                        .HasColumnType("real");

                    b.HasKey("codProjeto");

                    b.HasIndex("codDepartamento");

                    b.HasIndex("idCliente");

                    b.ToTable("projetos");
                });

            modelBuilder.Entity("ProjetoFinal.ProjetoFuncionario", b =>
                {
                    b.Property<int>("idProjeto")
                        .HasColumnType("int");

                    b.Property<int>("idFuncionario")
                        .HasColumnType("int");

                    b.HasKey("idProjeto", "idFuncionario")
                        .HasName("pkProjetoFuncionario");

                    b.HasIndex("idFuncionario");

                    b.ToTable("funcionariosProjeto");
                });

            modelBuilder.Entity("ProjetoFinal.ContaBancaria", b =>
                {
                    b.HasOne("ProjetoFinal.Funcionario", "fkCodFuncionario")
                        .WithMany()
                        .HasForeignKey("fkCodFuncionariocodFuncionario");

                    b.Navigation("fkCodFuncionario");
                });

            modelBuilder.Entity("ProjetoFinal.Funcionario", b =>
                {
                    b.HasOne("ProjetoFinal.Cargo", "fkCodCargo")
                        .WithMany("funcionarioCargos")
                        .HasForeignKey("idCargo")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FkIdCargo");

                    b.HasOne("ProjetoFinal.Departamento", "fkCodDepartamento")
                        .WithMany("funcionariosDepartamento")
                        .HasForeignKey("idDepartamento")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FkIdDepartamento");

                    b.Navigation("fkCodCargo");

                    b.Navigation("fkCodDepartamento");
                });

            modelBuilder.Entity("ProjetoFinal.Projeto", b =>
                {
                    b.HasOne("ProjetoFinal.Departamento", "fkCodDepartamento")
                        .WithMany()
                        .HasForeignKey("codDepartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoFinal.Cliente", "fkCliente")
                        .WithMany("clienteProjetos")
                        .HasForeignKey("idCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fkCliente");

                    b.Navigation("fkCodDepartamento");
                });

            modelBuilder.Entity("ProjetoFinal.ProjetoFuncionario", b =>
                {
                    b.HasOne("ProjetoFinal.Funcionario", "fkFuncionario")
                        .WithMany("funcionariosProj")
                        .HasForeignKey("idFuncionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fkFuncionario");

                    b.HasOne("ProjetoFinal.Projeto", "fkProjeto")
                        .WithMany("funcionariosProj")
                        .HasForeignKey("idProjeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fkProjeto");

                    b.Navigation("fkFuncionario");

                    b.Navigation("fkProjeto");
                });

            modelBuilder.Entity("ProjetoFinal.Cargo", b =>
                {
                    b.Navigation("funcionarioCargos");
                });

            modelBuilder.Entity("ProjetoFinal.Cliente", b =>
                {
                    b.Navigation("clienteProjetos");
                });

            modelBuilder.Entity("ProjetoFinal.Departamento", b =>
                {
                    b.Navigation("funcionariosDepartamento");
                });

            modelBuilder.Entity("ProjetoFinal.Funcionario", b =>
                {
                    b.Navigation("funcionariosProj");
                });

            modelBuilder.Entity("ProjetoFinal.Projeto", b =>
                {
                    b.Navigation("funcionariosProj");
                });
#pragma warning restore 612, 618
        }
    }
}
